{
	"info": {
		"_postman_id": "eac1ce70-2e2d-4677-930d-cfdc19145e0f",
		"name": "Simptel Authorization Server",
		"description": "REST API of the Simptel Authorization Server",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "18374126",
		"_collection_link": "https://simptel.postman.co/workspace/Simptel-API's~4c30b8b9-b2d8-4999-ab50-5210d193a9e4/collection/18374126-eac1ce70-2e2d-4677-930d-cfdc19145e0f?action=share&source=collection_link&creator=18374126"
	},
	"item": [
		{
			"name": "accountrecovery",
			"item": [
				{
					"name": "callback",
					"item": [
						{
							"name": "Verifies the TOTP (Time-based One-Time Password) during account recovery, allowing the user to obtain an access token.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"izahir@simptel.com\",\n  \"otp\": \"000000\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/accountrecovery/callback?applicationId=000000000000000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accountrecovery",
										"callback"
									],
									"query": [
										{
											"key": "applicationId",
											"value": "000000000000000000000000",
											"description": "The ID of the IAM (Identity and Access Management) application."
										}
									]
								}
							},
							"response": [
								{
									"name": "You have succesfully recovered your account, please continue!",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"<email>\",\n  \"otp\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/accountrecovery/callback?applicationId=000000000000000000000000",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accountrecovery",
												"callback"
											],
											"query": [
												{
													"key": "applicationId",
													"value": "000000000000000000000000",
													"description": "The ID of the IAM (Identity and Access Management) application."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"applicationId\": \"<string>\",\n    \"email\": \"<email>\",\n    \"mode\": \"accountRecovery\"\n  },\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "A valid OTP is required for verification.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"<email>\",\n  \"otp\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/accountrecovery/callback?applicationId=000000000000000000000000",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accountrecovery",
												"callback"
											],
											"query": [
												{
													"key": "applicationId",
													"value": "000000000000000000000000",
													"description": "The ID of the IAM (Identity and Access Management) application."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The provided OTP is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"<email>\",\n  \"otp\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/accountrecovery/callback?applicationId=000000000000000000000000",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accountrecovery",
												"callback"
											],
											"query": [
												{
													"key": "applicationId",
													"value": "000000000000000000000000",
													"description": "The ID of the IAM (Identity and Access Management) application."
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "An unexpected error has occurred on the server.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"<email>\",\n  \"otp\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/accountrecovery/callback?applicationId=000000000000000000000000",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"accountrecovery",
												"callback"
											],
											"query": [
												{
													"key": "applicationId",
													"value": "000000000000000000000000",
													"description": "The ID of the IAM (Identity and Access Management) application."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "auth",
			"item": [
				{
					"name": "login",
					"item": [
						{
							"name": "Authenticate a user",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/login?applicationId=000000000000000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"login"
									],
									"query": [
										{
											"key": "applicationId",
											"value": "000000000000000000000000",
											"description": "Identifier of the IAM (Identity and Access Management) application."
										}
									]
								},
								"description": "Verifies the provided username or email and password, returning an access token upon successful authentication.\n"
							},
							"response": [
								{
									"name": "Successful login",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/login?applicationId=000000000000000000000000",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"login"
											],
											"query": [
												{
													"key": "applicationId",
													"value": "000000000000000000000000",
													"description": "Identifier of the IAM (Identity and Access Management) application."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"email\": \"<string>\",\n  \"applicationId\": \"<string>\",\n  \"mode\": \"authentication\"\n}"
								},
								{
									"name": "Invalid credentials provided",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/login?applicationId=000000000000000000000000",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"login"
											],
											"query": [
												{
													"key": "applicationId",
													"value": "000000000000000000000000",
													"description": "Identifier of the IAM (Identity and Access Management) application."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/login?applicationId=000000000000000000000000",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"login"
											],
											"query": [
												{
													"key": "applicationId",
													"value": "000000000000000000000000",
													"description": "Identifier of the IAM (Identity and Access Management) application."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/login?applicationId=000000000000000000000000",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"login"
											],
											"query": [
												{
													"key": "applicationId",
													"value": "000000000000000000000000",
													"description": "Identifier of the IAM (Identity and Access Management) application."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "logout",
					"item": [
						{
							"name": "Initiates the logout process for an authenticated user.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/auth/logout?post_logout_redirect_uri=<string>&state=<string>&client_id=<string>&id_token_hint=<string>&logout_hint=<string>&ui_locales=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"logout"
									],
									"query": [
										{
											"key": "post_logout_redirect_uri",
											"value": "<string>",
											"description": "Logout parameters."
										},
										{
											"key": "state",
											"value": "<string>",
											"description": "Logout parameters."
										},
										{
											"key": "client_id",
											"value": "<string>",
											"description": "Logout parameters."
										},
										{
											"key": "id_token_hint",
											"value": "<string>",
											"description": "Logout parameters."
										},
										{
											"key": "logout_hint",
											"value": "<string>",
											"description": "Logout parameters."
										},
										{
											"key": "ui_locales",
											"value": "<string>",
											"description": "Logout parameters."
										}
									]
								}
							},
							"response": [
								{
									"name": "Successful logout.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/auth/logout?post_logout_redirect_uri=<string>&state=<string>&client_id=<string>&id_token_hint=<string>&logout_hint=<string>&ui_locales=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"logout"
											],
											"query": [
												{
													"key": "post_logout_redirect_uri",
													"value": "<string>",
													"description": "Logout parameters."
												},
												{
													"key": "state",
													"value": "<string>",
													"description": "Logout parameters."
												},
												{
													"key": "client_id",
													"value": "<string>",
													"description": "Logout parameters."
												},
												{
													"key": "id_token_hint",
													"value": "<string>",
													"description": "Logout parameters."
												},
												{
													"key": "logout_hint",
													"value": "<string>",
													"description": "Logout parameters."
												},
												{
													"key": "ui_locales",
													"value": "<string>",
													"description": "Logout parameters."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Invalid request. One or more of the request parameters are missing or incorrect.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/auth/logout?post_logout_redirect_uri=<string>&state=<string>&client_id=<string>&id_token_hint=<string>&logout_hint=<string>&ui_locales=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"logout"
											],
											"query": [
												{
													"key": "post_logout_redirect_uri",
													"value": "<string>",
													"description": "Logout parameters."
												},
												{
													"key": "state",
													"value": "<string>",
													"description": "Logout parameters."
												},
												{
													"key": "client_id",
													"value": "<string>",
													"description": "Logout parameters."
												},
												{
													"key": "id_token_hint",
													"value": "<string>",
													"description": "Logout parameters."
												},
												{
													"key": "logout_hint",
													"value": "<string>",
													"description": "Logout parameters."
												},
												{
													"key": "ui_locales",
													"value": "<string>",
													"description": "Logout parameters."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "openid",
					"item": [
						{
							"name": "Initiates the OpenID Connect authentication flow",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/auth/openid?client_id=88e8a406-cc8b-491a-adb0-57783878b16b&redirect_uri=https://localhost:3001/auth/oidc/login/callback",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"openid"
									],
									"query": [
										{
											"key": "client_id",
											"value": "88e8a406-cc8b-491a-adb0-57783878b16b",
											"description": "The client ID of the external provider"
										},
										{
											"key": "redirect_uri",
											"value": "https://localhost:3001/auth/oidc/login/callback",
											"description": "The redirect URI"
										}
									]
								},
								"description": "Initiates the OpenID Connect authorization flow for a user to authenticate and obtain an access token. The callback URL /auth/oidc/login will be invoked on success.\n"
							},
							"response": [
								{
									"name": "Ok",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/auth/openid?client_id=88e8a406-cc8b-491a-adb0-57783878b16b&redirect_uri=https://localhost:3001/auth/oidc/login/callback",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"openid"
											],
											"query": [
												{
													"key": "client_id",
													"value": "88e8a406-cc8b-491a-adb0-57783878b16b",
													"description": "The client ID of the external provider"
												},
												{
													"key": "redirect_uri",
													"value": "https://localhost:3001/auth/oidc/login/callback",
													"description": "The redirect URI"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/auth/openid?client_id=88e8a406-cc8b-491a-adb0-57783878b16b&redirect_uri=https://localhost:3001/auth/oidc/login/callback",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"openid"
											],
											"query": [
												{
													"key": "client_id",
													"value": "88e8a406-cc8b-491a-adb0-57783878b16b",
													"description": "The client ID of the external provider"
												},
												{
													"key": "redirect_uri",
													"value": "https://localhost:3001/auth/oidc/login/callback",
													"description": "The redirect URI"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/auth/openid?client_id=88e8a406-cc8b-491a-adb0-57783878b16b&redirect_uri=https://localhost:3001/auth/oidc/login/callback",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"openid"
											],
											"query": [
												{
													"key": "client_id",
													"value": "88e8a406-cc8b-491a-adb0-57783878b16b",
													"description": "The client ID of the external provider"
												},
												{
													"key": "redirect_uri",
													"value": "https://localhost:3001/auth/oidc/login/callback",
													"description": "The redirect URI"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/auth/openid?client_id=88e8a406-cc8b-491a-adb0-57783878b16b&redirect_uri=https://localhost:3001/auth/oidc/login/callback",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"openid"
											],
											"query": [
												{
													"key": "client_id",
													"value": "88e8a406-cc8b-491a-adb0-57783878b16b",
													"description": "The client ID of the external provider"
												},
												{
													"key": "redirect_uri",
													"value": "https://localhost:3001/auth/oidc/login/callback",
													"description": "The redirect URI"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "oauth2",
			"item": [
				{
					"name": "authorize",
					"item": [
						{
							"name": "Initiates the OAuth 2.1 authorization flow",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/oauth2/authorize?response_type=code&client_id=000000000000000000000000&redirect_uri=https://platform.simptellabs.com/login&scope=openid profile email&state=<string>&code_challenge=openid profile email&code_challenge_method=S256",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"oauth2",
										"authorize"
									],
									"query": [
										{
											"key": "response_type",
											"value": "code",
											"description": "(Required) Specifies the type of response required, must be set to 'code' as per OAuth 2.1 protocol."
										},
										{
											"key": "client_id",
											"value": "000000000000000000000000",
											"description": "(Required) Unique identifier of the client application seeking access."
										},
										{
											"key": "redirect_uri",
											"value": "https://platform.simptellabs.com/login",
											"description": "(Required) The URI to redirect user after authorization is granted or denied."
										},
										{
											"key": "scope",
											"value": "openid profile email",
											"description": "Specifies the scope of access request, might include multiple space-separated values."
										},
										{
											"key": "state",
											"value": "<string>",
											"description": "Value used by the client to maintain state between the request and callback. Prevents cross-site request forgery."
										},
										{
											"key": "code_challenge",
											"value": "openid profile email",
											"description": "(Required) Challenge derived from the code verifier for PKCE."
										},
										{
											"key": "code_challenge_method",
											"value": "S256",
											"description": "(Required) Method used to derive the code challenge, either 'plain' or 'S256'."
										}
									]
								},
								"description": "This endpoint initiates the OAuth 2.1 authorization flow. It supports various grant types including authorization code and refresh token. The authorization interface is the screen users see when granting applications access to their account. When implementing an OAuth server, you are enabling a developer community to build applications that leverage your platform, allowing applications to access and potentially modify private user content, or act on behalf of users. Because of this, you need to ensure you are empowering your users with as much information as possible to protect their accounts and ensure they are informed as to what applications are doing with their accounts. For more details and libraries supporting OAuth 2.1 and OpenID Connect, visit https://oauth.net/code/"
							},
							"response": [
								{
									"name": "Successful operation. The user agent is redirected to the provided redirect_uri with the authorization code in the URL parameters.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/oauth2/authorize?response_type=code&client_id=000000000000000000000000&redirect_uri=https://platform.simptellabs.com/login&scope=openid profile email&state=<string>&code_challenge=openid profile email&code_challenge_method=S256",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oauth2",
												"authorize"
											],
											"query": [
												{
													"key": "response_type",
													"value": "code",
													"description": "(Required) Specifies the type of response required, must be set to 'code' as per OAuth 2.1 protocol."
												},
												{
													"key": "client_id",
													"value": "000000000000000000000000",
													"description": "(Required) Unique identifier of the client application seeking access."
												},
												{
													"key": "redirect_uri",
													"value": "https://platform.simptellabs.com/login",
													"description": "(Required) The URI to redirect user after authorization is granted or denied."
												},
												{
													"key": "scope",
													"value": "openid profile email",
													"description": "Specifies the scope of access request, might include multiple space-separated values."
												},
												{
													"key": "state",
													"value": "<string>",
													"description": "Value used by the client to maintain state between the request and callback. Prevents cross-site request forgery."
												},
												{
													"key": "code_challenge",
													"value": "openid profile email",
													"description": "(Required) Challenge derived from the code verifier for PKCE."
												},
												{
													"key": "code_challenge_method",
													"value": "S256",
													"description": "(Required) Method used to derive the code challenge, either 'plain' or 'S256'."
												}
											]
										}
									},
									"status": "Found",
									"code": 302,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad Request - The request could not be understood by the server due to malformed syntax or invalid request parameters.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/oauth2/authorize?response_type=code&client_id=000000000000000000000000&redirect_uri=https://platform.simptellabs.com/login&scope=openid profile email&state=<string>&code_challenge=openid profile email&code_challenge_method=S256",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oauth2",
												"authorize"
											],
											"query": [
												{
													"key": "response_type",
													"value": "code",
													"description": "(Required) Specifies the type of response required, must be set to 'code' as per OAuth 2.1 protocol."
												},
												{
													"key": "client_id",
													"value": "000000000000000000000000",
													"description": "(Required) Unique identifier of the client application seeking access."
												},
												{
													"key": "redirect_uri",
													"value": "https://platform.simptellabs.com/login",
													"description": "(Required) The URI to redirect user after authorization is granted or denied."
												},
												{
													"key": "scope",
													"value": "openid profile email",
													"description": "Specifies the scope of access request, might include multiple space-separated values."
												},
												{
													"key": "state",
													"value": "<string>",
													"description": "Value used by the client to maintain state between the request and callback. Prevents cross-site request forgery."
												},
												{
													"key": "code_challenge",
													"value": "openid profile email",
													"description": "(Required) Challenge derived from the code verifier for PKCE."
												},
												{
													"key": "code_challenge_method",
													"value": "S256",
													"description": "(Required) Method used to derive the code challenge, either 'plain' or 'S256'."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized - The request requires user authentication or, if the request included authorization credentials, authorization has been refused for those credentials.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/oauth2/authorize?response_type=code&client_id=000000000000000000000000&redirect_uri=https://platform.simptellabs.com/login&scope=openid profile email&state=<string>&code_challenge=openid profile email&code_challenge_method=S256",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oauth2",
												"authorize"
											],
											"query": [
												{
													"key": "response_type",
													"value": "code",
													"description": "(Required) Specifies the type of response required, must be set to 'code' as per OAuth 2.1 protocol."
												},
												{
													"key": "client_id",
													"value": "000000000000000000000000",
													"description": "(Required) Unique identifier of the client application seeking access."
												},
												{
													"key": "redirect_uri",
													"value": "https://platform.simptellabs.com/login",
													"description": "(Required) The URI to redirect user after authorization is granted or denied."
												},
												{
													"key": "scope",
													"value": "openid profile email",
													"description": "Specifies the scope of access request, might include multiple space-separated values."
												},
												{
													"key": "state",
													"value": "<string>",
													"description": "Value used by the client to maintain state between the request and callback. Prevents cross-site request forgery."
												},
												{
													"key": "code_challenge",
													"value": "openid profile email",
													"description": "(Required) Challenge derived from the code verifier for PKCE."
												},
												{
													"key": "code_challenge_method",
													"value": "S256",
													"description": "(Required) Method used to derive the code challenge, either 'plain' or 'S256'."
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden - The server understood the request, but it refuses to authorize it.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/oauth2/authorize?response_type=code&client_id=000000000000000000000000&redirect_uri=https://platform.simptellabs.com/login&scope=openid profile email&state=<string>&code_challenge=openid profile email&code_challenge_method=S256",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oauth2",
												"authorize"
											],
											"query": [
												{
													"key": "response_type",
													"value": "code",
													"description": "(Required) Specifies the type of response required, must be set to 'code' as per OAuth 2.1 protocol."
												},
												{
													"key": "client_id",
													"value": "000000000000000000000000",
													"description": "(Required) Unique identifier of the client application seeking access."
												},
												{
													"key": "redirect_uri",
													"value": "https://platform.simptellabs.com/login",
													"description": "(Required) The URI to redirect user after authorization is granted or denied."
												},
												{
													"key": "scope",
													"value": "openid profile email",
													"description": "Specifies the scope of access request, might include multiple space-separated values."
												},
												{
													"key": "state",
													"value": "<string>",
													"description": "Value used by the client to maintain state between the request and callback. Prevents cross-site request forgery."
												},
												{
													"key": "code_challenge",
													"value": "openid profile email",
													"description": "(Required) Challenge derived from the code verifier for PKCE."
												},
												{
													"key": "code_challenge_method",
													"value": "S256",
													"description": "(Required) Method used to derive the code challenge, either 'plain' or 'S256'."
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error - An unexpected condition was encountered and no more specific message is suitable.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/oauth2/authorize?response_type=code&client_id=000000000000000000000000&redirect_uri=https://platform.simptellabs.com/login&scope=openid profile email&state=<string>&code_challenge=openid profile email&code_challenge_method=S256",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oauth2",
												"authorize"
											],
											"query": [
												{
													"key": "response_type",
													"value": "code",
													"description": "(Required) Specifies the type of response required, must be set to 'code' as per OAuth 2.1 protocol."
												},
												{
													"key": "client_id",
													"value": "000000000000000000000000",
													"description": "(Required) Unique identifier of the client application seeking access."
												},
												{
													"key": "redirect_uri",
													"value": "https://platform.simptellabs.com/login",
													"description": "(Required) The URI to redirect user after authorization is granted or denied."
												},
												{
													"key": "scope",
													"value": "openid profile email",
													"description": "Specifies the scope of access request, might include multiple space-separated values."
												},
												{
													"key": "state",
													"value": "<string>",
													"description": "Value used by the client to maintain state between the request and callback. Prevents cross-site request forgery."
												},
												{
													"key": "code_challenge",
													"value": "openid profile email",
													"description": "(Required) Challenge derived from the code verifier for PKCE."
												},
												{
													"key": "code_challenge_method",
													"value": "S256",
													"description": "(Required) Method used to derive the code challenge, either 'plain' or 'S256'."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "token",
					"item": [
						{
							"name": "introspect",
							"item": [
								{
									"name": "Token Introspection Endpoint",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": {
												"scope": "offline_access profile users fakescope",
												"accessTokenUrl": "https://localhost:3001/oauth2/token",
												"grant_type": "client_credentials"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "token",
													"value": "<string>",
													"description": "(Required) Token being sent."
												},
												{
													"key": "tokenTypeHint",
													"value": "access_token",
													"description": "Hint about the type of the token submitted for introspection."
												}
											]
										},
										"url": "{{baseUrl}}/oauth2/token/introspect",
										"description": "Provides a method to introspect an OAuth 2.0 token (RFC 7662), to verify its active state and retrieve associated metadata.\nConforms to OAuth 2.1 guidelines.\n"
									},
									"response": [
										{
											"name": "Successful operation, token is active and response includes associated metadata.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "token",
															"value": "<string>",
															"description": "(Required) Token being sent."
														},
														{
															"key": "tokenTypeHint",
															"value": "access_token",
															"description": "Hint about the type of the token submitted for introspection."
														}
													]
												},
												"url": "{{baseUrl}}/oauth2/token/introspect"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"active\": \"<boolean>\",\n  \"scope\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"username\": \"<string>\",\n  \"token_type\": \"<string>\",\n  \"exp\": \"<integer>\",\n  \"iat\": \"<integer>\",\n  \"nbf\": \"<integer>\"\n}"
										},
										{
											"name": "Bad Request. This can occur due to missing or incorrect parameters, or if the server does not support revocation of the provided token type.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "token",
															"value": "<string>",
															"description": "(Required) Token being sent."
														},
														{
															"key": "tokenTypeHint",
															"value": "access_token",
															"description": "Hint about the type of the token submitted for introspection."
														}
													]
												},
												"url": "{{baseUrl}}/oauth2/token/introspect"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized. Client authentication failed due to unknown client, no client authentication included, or unsupported authentication method.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "token",
															"value": "<string>",
															"description": "(Required) Token being sent."
														},
														{
															"key": "tokenTypeHint",
															"value": "access_token",
															"description": "Hint about the type of the token submitted for introspection."
														}
													]
												},
												"url": "{{baseUrl}}/oauth2/token/introspect"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unexpected server error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "token",
															"value": "<string>",
															"description": "(Required) Token being sent."
														},
														{
															"key": "tokenTypeHint",
															"value": "access_token",
															"description": "Hint about the type of the token submitted for introspection."
														}
													]
												},
												"url": "{{baseUrl}}/oauth2/token/introspect"
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "revoke",
							"item": [
								{
									"name": "Token Revocation Endpoint",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": {
												"scope": "offline_access profile users fakescope",
												"accessTokenUrl": "https://localhost:3001/oauth2/token",
												"grant_type": "client_credentials"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "token",
													"value": "<string>",
													"description": "(Required) Token being sent."
												},
												{
													"key": "tokenTypeHint",
													"value": "access_token",
													"description": "Hint about the type of the token submitted for introspection."
												}
											]
										},
										"url": "{{baseUrl}}/oauth2/token/revoke",
										"description": "Provides a method to revoke an OAuth 2.0 token (RFC 7009), making the token invalid. Conforms to OAuth 2.1 guidelines.\n"
									},
									"response": [
										{
											"name": "Successful, the token has been revoked.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "token",
															"value": "<string>",
															"description": "(Required) Token being sent."
														},
														{
															"key": "tokenTypeHint",
															"value": "access_token",
															"description": "Hint about the type of the token submitted for introspection."
														}
													]
												},
												"url": "{{baseUrl}}/oauth2/token/revoke"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request. This can occur if required parameters are missing or incorrect, or if the server does not support revocation of the provided token type.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "token",
															"value": "<string>",
															"description": "(Required) Token being sent."
														},
														{
															"key": "tokenTypeHint",
															"value": "access_token",
															"description": "Hint about the type of the token submitted for introspection."
														}
													]
												},
												"url": "{{baseUrl}}/oauth2/token/revoke"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized. Client authentication failed due to unknown client, no client authentication included, or unsupported authentication method.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "token",
															"value": "<string>",
															"description": "(Required) Token being sent."
														},
														{
															"key": "tokenTypeHint",
															"value": "access_token",
															"description": "Hint about the type of the token submitted for introspection."
														}
													]
												},
												"url": "{{baseUrl}}/oauth2/token/revoke"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unexpected server error.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "token",
															"value": "<string>",
															"description": "(Required) Token being sent."
														},
														{
															"key": "tokenTypeHint",
															"value": "access_token",
															"description": "Hint about the type of the token submitted for introspection."
														}
													]
												},
												"url": "{{baseUrl}}/oauth2/token/revoke"
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Exchange grant for Access Token",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grantType",
											"value": "authorization_code"
										},
										{
											"key": "code",
											"value": "<string>"
										},
										{
											"key": "redirectUri",
											"value": "<uri>"
										},
										{
											"key": "clientId",
											"value": "<string>"
										},
										{
											"key": "codeVerifier",
											"value": "<string>"
										}
									]
								},
								"url": "{{baseUrl}}/oauth2/token",
								"description": "This operation exchanges an authorization grant (e.g., authorization code, refresh token, client credentials)\nfor an access token and, optionally, a refresh token. This endpoint adheres to the OAuth 2.1 specification,\nand supports multiple methods for client authentication including \"client_secret_post\" and \"client_secret_basic\".\nDepending on the method used, the client provides authentication details either in the request body\n(for \"client_secret_post\") or in the \"Authorization\" header (for \"client_secret_basic\"). For more extensive information,\nvisit: https://oauth.net/code/\n"
							},
							"response": [
								{
									"name": "A successful response returns the access token and potentially a refresh token.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grantType",
													"value": "authorization_code"
												},
												{
													"key": "code",
													"value": "<string>"
												},
												{
													"key": "redirectUri",
													"value": "<uri>"
												},
												{
													"key": "clientId",
													"value": "<string>"
												},
												{
													"key": "codeVerifier",
													"value": "<string>"
												}
											]
										},
										"url": "{{baseUrl}}/oauth2/token"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"accessToken\": \"<string>\",\n  \"tokenType\": \"<string>\",\n  \"expiresIn\": \"<long>\",\n  \"refreshToken\": \"<string>\",\n  \"exampleParameter\": \"<string>\"\n}"
								},
								{
									"name": "Bad Request. The request was malformed, missing a required parameter, or including an unsupported parameter value.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grantType",
													"value": "authorization_code"
												},
												{
													"key": "code",
													"value": "<string>"
												},
												{
													"key": "redirectUri",
													"value": "<uri>"
												},
												{
													"key": "clientId",
													"value": "<string>"
												},
												{
													"key": "codeVerifier",
													"value": "<string>"
												}
											]
										},
										"url": "{{baseUrl}}/oauth2/token"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized. The client authentication failed with the authorization server.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grantType",
													"value": "authorization_code"
												},
												{
													"key": "code",
													"value": "<string>"
												},
												{
													"key": "redirectUri",
													"value": "<uri>"
												},
												{
													"key": "clientId",
													"value": "<string>"
												},
												{
													"key": "codeVerifier",
													"value": "<string>"
												}
											]
										},
										"url": "{{baseUrl}}/oauth2/token"
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found. The requested resource was not found.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grantType",
													"value": "authorization_code"
												},
												{
													"key": "code",
													"value": "<string>"
												},
												{
													"key": "redirectUri",
													"value": "<uri>"
												},
												{
													"key": "clientId",
													"value": "<string>"
												},
												{
													"key": "codeVerifier",
													"value": "<string>"
												}
											]
										},
										"url": "{{baseUrl}}/oauth2/token"
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error. An unexpected error occurred while processing the request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grantType",
													"value": "authorization_code"
												},
												{
													"key": "code",
													"value": "<string>"
												},
												{
													"key": "redirectUri",
													"value": "<uri>"
												},
												{
													"key": "clientId",
													"value": "<string>"
												},
												{
													"key": "codeVerifier",
													"value": "<string>"
												}
											]
										},
										"url": "{{baseUrl}}/oauth2/token"
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": ".well-known",
					"item": [
						{
							"name": "openid-configuration",
							"item": [
								{
									"name": "The OAuth 2.0 Token Endpoint",
									"request": {
										"method": "GET",
										"header": [],
										"url": "{{baseUrl}}/oauth2/.well-known/openid-configuration",
										"description": "Use open source libraries to perform OAuth 2.0 and OpenID Connect available for any programming language. You can find a list of libraries at https://oauth.net/code/"
									},
									"response": [
										{
											"name": "Ok",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": "{{baseUrl}}/oauth2/.well-known/openid-configuration"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": "{{baseUrl}}/oauth2/.well-known/openid-configuration"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Account is not found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": "{{baseUrl}}/oauth2/.well-known/openid-configuration"
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": "{{baseUrl}}/oauth2/.well-known/openid-configuration"
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "jwks",
					"item": [
						{
							"name": "Get JWKS",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": "{{baseUrl}}/oauth2/jwks",
								"description": "This endpoint returns the JSON Web Key Set (JWKS), which can be used to verify the JWTs issued by the authorization server."
							},
							"response": [
								{
									"name": "JSON Web Key Set",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": "{{baseUrl}}/oauth2/jwks"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"keys\": [\n    {\n      \"kty\": \"<string>\",\n      \"use\": \"<string>\",\n      \"kid\": \"<string>\",\n      \"alg\": \"<string>\",\n      \"n\": \"<string>\",\n      \"e\": \"<string>\"\n    },\n    {\n      \"kty\": \"<string>\",\n      \"use\": \"<string>\",\n      \"kid\": \"<string>\",\n      \"alg\": \"<string>\",\n      \"n\": \"<string>\",\n      \"e\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "registration",
			"item": [
				{
					"name": "callback",
					"item": [
						{
							"name": "Verifies the OTP for registration and returns an access token.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<email>\",\n  \"otp\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/registration/callback?applicationId=000000000000000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"registration",
										"callback"
									],
									"query": [
										{
											"key": "applicationId",
											"value": "000000000000000000000000",
											"description": "(Required) The unique identifier of the IAM application initiating the registration process."
										}
									]
								},
								"description": "This endpoint is used for the verification of the One-Time Password (OTP) during user registration. Upon successful verification, the user is provided with an access token.\n"
							},
							"response": [
								{
									"name": "OTP has been successfully verified. The user can now proceed to the next registration step.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"<email>\",\n  \"otp\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/registration/callback?applicationId=000000000000000000000000",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"registration",
												"callback"
											],
											"query": [
												{
													"key": "applicationId",
													"value": "000000000000000000000000",
													"description": "(Required) The unique identifier of the IAM application initiating the registration process."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"applicationId\": \"<string>\",\n    \"email\": \"<email>\",\n    \"mode\": \"registration\"\n  },\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "The OTP was not provided in the request body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"<email>\",\n  \"otp\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/registration/callback?applicationId=000000000000000000000000",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"registration",
												"callback"
											],
											"query": [
												{
													"key": "applicationId",
													"value": "000000000000000000000000",
													"description": "(Required) The unique identifier of the IAM application initiating the registration process."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The provided OTP is incorrect or expired.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"<email>\",\n  \"otp\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/registration/callback?applicationId=000000000000000000000000",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"registration",
												"callback"
											],
											"query": [
												{
													"key": "applicationId",
													"value": "000000000000000000000000",
													"description": "(Required) The unique identifier of the IAM application initiating the registration process."
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "An unexpected server error occurred during the registration process.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"<email>\",\n  \"otp\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/registration/callback?applicationId=000000000000000000000000",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"registration",
												"callback"
											],
											"query": [
												{
													"key": "applicationId",
													"value": "000000000000000000000000",
													"description": "(Required) The unique identifier of the IAM application initiating the registration process."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "sessions",
			"item": [
				{
					"name": "session",
					"item": [
						{
							"name": "refresh",
							"item": [
								{
									"name": "Refresh current session",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": {
												"scope": "offline_access profile",
												"redirect_uri": "https://localhost:3001/oauth2/token",
												"accessTokenUrl": "https://localhost:3001/oauth2/token",
												"authUrl": "https://localhost:3001/oauth2/authorize",
												"grant_type": "authorization_code"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": "{{baseUrl}}/sessions/session/refresh"
									},
									"response": [
										{
											"name": "Ok",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": "{{baseUrl}}/sessions/session/refresh"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": {\n    \"cookie\": {\n      \"originalMaxAge\": \"<integer>\",\n      \"expires\": \"<string>\",\n      \"secure\": false,\n      \"httpOnly\": true,\n      \"domain\": null,\n      \"path\": \"/\",\n      \"sameSite\": null\n    },\n    \"phonenumber\": \"<string>\",\n    \"user\": {\n      \"authentication\": {\n        \"issuer\": \"<array>\"\n      },\n      \"_id\": \"<string>\",\n      \"email\": \"<string>\",\n      \"__v\": 0,\n      \"accessId\": \"<array>\",\n      \"active\": true,\n      \"createdAt\": \"<string>\",\n      \"emailVerified\": true,\n      \"mfaMethods\": [\n        {\n          \"name\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"mfaSteps\": 0,\n      \"phoneVerified\": false,\n      \"updatedAt\": \"<string>\",\n      \"username\": \"<string>\",\n      \"firstname\": \"<string>\",\n      \"lastname\": \"<string>\",\n      \"phonenumber\": \"<string>\"\n    },\n    \"useragent\": {\n      \"ua\": \"<string>\",\n      \"browser\": {\n        \"name\": \"<string>\",\n        \"version\": \"<string>\",\n        \"major\": \"<string>\"\n      },\n      \"engine\": {\n        \"name\": \"<string>\",\n        \"version\": \"<string>\"\n      },\n      \"device\": {},\n      \"cpu\": {\n        \"architecture\": \"<string>\"\n      }\n    },\n    \"ip\": \"<string>\",\n    \"permission\": {\n      \"create\": \"<array>\",\n      \"read\": \"<array>\",\n      \"update\": \"<array>\",\n      \"delete\": \"<array>\"\n    },\n    \"MFAInputsBucket\": {},\n    \"sessionID\": \"<string>\",\n    \"email\": \"<string>\",\n    \"passport\": {\n      \"user\": {\n        \"authentication\": {\n          \"issuer\": \"<array>\"\n        }\n      },\n      \"_id\": \"<string>\",\n      \"email\": \"<string>\",\n      \"__v\": \"<number>\",\n      \"accessId\": \"<array>\",\n      \"active\": true,\n      \"createdAt\": \"<string>\",\n      \"emailVerified\": true,\n      \"mfaMethods\": [\n        {\n          \"name\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"mfaSteps\": \"<number>\",\n      \"phoneVerified\": false,\n      \"updatedAt\": \"<string>\",\n      \"username\": \"<string>\",\n      \"firstname\": \"<string>\",\n      \"lastname\": \"<string>\",\n      \"phonenumber\": \"<string>\"\n    }\n  }\n}"
										},
										{
											"name": "Unexpected Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": "{{baseUrl}}/sessions/session/refresh"
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "extend",
							"item": [
								{
									"name": "Extend session",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": {
												"scope": "offline_access profile",
												"redirect_uri": "https://localhost:3001/oauth2/token",
												"accessTokenUrl": "https://localhost:3001/oauth2/token",
												"authUrl": "https://localhost:3001/oauth2/authorize",
												"grant_type": "authorization_code"
											}
										},
										"method": "GET",
										"header": [],
										"url": "{{baseUrl}}/sessions/session/extend"
									},
									"response": [
										{
											"name": "Ok",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": "{{baseUrl}}/sessions/session/extend"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Authorization information is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": "{{baseUrl}}/sessions/session/extend"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unexpected Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": "{{baseUrl}}/sessions/session/extend"
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "{id}",
							"item": [
								{
									"name": "Close session by id",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": {
												"scope": "offline_access profile",
												"redirect_uri": "https://localhost:3001/oauth2/token",
												"accessTokenUrl": "https://localhost:3001/oauth2/token",
												"authUrl": "https://localhost:3001/oauth2/authorize",
												"grant_type": "authorization_code"
											}
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/sessions/session/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sessions",
												"session",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>"
												}
											]
										}
									},
									"response": [
										{
											"name": "Ok",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sessions/session/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sessions",
														"session",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Authorization information is missing or invalid",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sessions/session/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sessions",
														"session",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unexpected Error",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sessions/session/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sessions",
														"session",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get session by id",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": {
												"scope": "offline_access profile",
												"redirect_uri": "https://localhost:3001/oauth2/token",
												"accessTokenUrl": "https://localhost:3001/oauth2/token",
												"authUrl": "https://localhost:3001/oauth2/authorize",
												"grant_type": "authorization_code"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sessions/session/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sessions",
												"session",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>"
												}
											]
										}
									},
									"response": [
										{
											"name": "Ok",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sessions/session/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sessions",
														"session",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": {\n    \"cookie\": {\n      \"originalMaxAge\": \"<integer>\",\n      \"expires\": \"<string>\",\n      \"secure\": false,\n      \"httpOnly\": true,\n      \"domain\": null,\n      \"path\": \"/\",\n      \"sameSite\": null\n    },\n    \"phonenumber\": \"<string>\",\n    \"user\": {\n      \"authentication\": {\n        \"issuer\": \"<array>\"\n      },\n      \"_id\": \"<string>\",\n      \"email\": \"<string>\",\n      \"__v\": 0,\n      \"accessId\": \"<array>\",\n      \"active\": true,\n      \"createdAt\": \"<string>\",\n      \"emailVerified\": true,\n      \"mfaMethods\": [\n        {\n          \"name\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"mfaSteps\": 0,\n      \"phoneVerified\": false,\n      \"updatedAt\": \"<string>\",\n      \"username\": \"<string>\",\n      \"firstname\": \"<string>\",\n      \"lastname\": \"<string>\",\n      \"phonenumber\": \"<string>\"\n    },\n    \"useragent\": {\n      \"ua\": \"<string>\",\n      \"browser\": {\n        \"name\": \"<string>\",\n        \"version\": \"<string>\",\n        \"major\": \"<string>\"\n      },\n      \"engine\": {\n        \"name\": \"<string>\",\n        \"version\": \"<string>\"\n      },\n      \"device\": {},\n      \"cpu\": {\n        \"architecture\": \"<string>\"\n      }\n    },\n    \"ip\": \"<string>\",\n    \"permission\": {\n      \"create\": \"<array>\",\n      \"read\": \"<array>\",\n      \"update\": \"<array>\",\n      \"delete\": \"<array>\"\n    },\n    \"MFAInputsBucket\": {},\n    \"sessionID\": \"<string>\",\n    \"authorize\": {\n      \"WdDyzvZI\": {\n        \"protocol\": \"<string>\",\n        \"client\": \"<string>\",\n        \"redirectURI\": \"<string>\",\n        \"webOrigin\": null,\n        \"req\": {\n          \"type\": \"<string>\",\n          \"clientID\": \"<string>\",\n          \"redirectURI\": \"<string>\",\n          \"scope\": \"<array>\",\n          \"state\": \"<string>\"\n        },\n        \"info\": null\n      }\n    }\n  }\n}"
										},
										{
											"name": "Id is not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sessions/session/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sessions",
														"session",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Authorization information is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sessions/session/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sessions",
														"session",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unexpected Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sessions/session/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sessions",
														"session",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get current session",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": "{{baseUrl}}/sessions/session"
							},
							"response": [
								{
									"name": "Ok",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": "{{baseUrl}}/sessions/session"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"cookie\": {\n      \"originalMaxAge\": \"<integer>\",\n      \"expires\": \"<string>\",\n      \"secure\": false,\n      \"httpOnly\": true,\n      \"domain\": null,\n      \"path\": \"/\",\n      \"sameSite\": null\n    },\n    \"phonenumber\": \"<string>\",\n    \"user\": {\n      \"authentication\": {\n        \"issuer\": \"<array>\"\n      },\n      \"_id\": \"<string>\",\n      \"email\": \"<string>\",\n      \"__v\": 0,\n      \"accessId\": \"<array>\",\n      \"active\": true,\n      \"createdAt\": \"<string>\",\n      \"emailVerified\": true,\n      \"mfaMethods\": [\n        {\n          \"name\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"mfaSteps\": 0,\n      \"phoneVerified\": false,\n      \"updatedAt\": \"<string>\",\n      \"username\": \"<string>\",\n      \"firstname\": \"<string>\",\n      \"lastname\": \"<string>\",\n      \"phonenumber\": \"<string>\"\n    },\n    \"useragent\": {\n      \"ua\": \"<string>\",\n      \"browser\": {\n        \"name\": \"<string>\",\n        \"version\": \"<string>\",\n        \"major\": \"<string>\"\n      },\n      \"engine\": {\n        \"name\": \"<string>\",\n        \"version\": \"<string>\"\n      },\n      \"device\": {},\n      \"cpu\": {\n        \"architecture\": \"<string>\"\n      }\n    },\n    \"ip\": \"<string>\",\n    \"permission\": {\n      \"create\": \"<array>\",\n      \"read\": \"<array>\",\n      \"update\": \"<array>\",\n      \"delete\": \"<array>\"\n    },\n    \"MFAInputsBucket\": {},\n    \"sessionID\": \"<string>\",\n    \"email\": \"<string>\",\n    \"passport\": {\n      \"user\": {\n        \"authentication\": {\n          \"issuer\": \"<array>\"\n        }\n      },\n      \"_id\": \"<string>\",\n      \"email\": \"<string>\",\n      \"__v\": \"<number>\",\n      \"accessId\": \"<array>\",\n      \"active\": true,\n      \"createdAt\": \"<string>\",\n      \"emailVerified\": true,\n      \"mfaMethods\": [\n        {\n          \"name\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"mfaSteps\": \"<number>\",\n      \"phoneVerified\": false,\n      \"updatedAt\": \"<string>\",\n      \"username\": \"<string>\",\n      \"firstname\": \"<string>\",\n      \"lastname\": \"<string>\",\n      \"phonenumber\": \"<string>\"\n    }\n  }\n}"
								},
								{
									"name": "Authorization information is missing or invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": "{{baseUrl}}/sessions/session"
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unexpected Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": "{{baseUrl}}/sessions/session"
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Close current session",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": {
										"scope": "offline_access profile",
										"redirect_uri": "https://localhost:3001/oauth2/token",
										"accessTokenUrl": "https://localhost:3001/oauth2/token",
										"authUrl": "https://localhost:3001/oauth2/authorize",
										"grant_type": "authorization_code"
									}
								},
								"method": "DELETE",
								"header": [],
								"url": "{{baseUrl}}/sessions/session"
							},
							"response": [
								{
									"name": "Ok",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": "{{baseUrl}}/sessions/session"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Authorization information is missing or invalid",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": "{{baseUrl}}/sessions/session"
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unexpected Error",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": "{{baseUrl}}/sessions/session"
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "bucket",
					"item": [
						{
							"name": "update session bucket",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": {
										"scope": "offline_access profile",
										"redirect_uri": "https://localhost:3001/oauth2/token",
										"accessTokenUrl": "https://localhost:3001/oauth2/token",
										"authUrl": "https://localhost:3001/oauth2/authorize",
										"grant_type": "authorization_code"
									}
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"session\": {}\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/sessions/bucket"
							},
							"response": [
								{
									"name": "Ok",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"session\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/sessions/bucket"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"cookie\": {\n      \"originalMaxAge\": \"<integer>\",\n      \"expires\": \"<string>\",\n      \"secure\": false,\n      \"httpOnly\": true,\n      \"domain\": null,\n      \"path\": \"/\",\n      \"sameSite\": null\n    },\n    \"phonenumber\": \"<string>\",\n    \"user\": {\n      \"authentication\": {\n        \"issuer\": \"<array>\"\n      },\n      \"_id\": \"<string>\",\n      \"email\": \"<string>\",\n      \"__v\": 0,\n      \"accessId\": \"<array>\",\n      \"active\": true,\n      \"createdAt\": \"<string>\",\n      \"emailVerified\": true,\n      \"mfaMethods\": [\n        {\n          \"name\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"mfaSteps\": 0,\n      \"phoneVerified\": false,\n      \"updatedAt\": \"<string>\",\n      \"username\": \"<string>\",\n      \"firstname\": \"<string>\",\n      \"lastname\": \"<string>\",\n      \"phonenumber\": \"<string>\"\n    },\n    \"useragent\": {\n      \"ua\": \"<string>\",\n      \"browser\": {\n        \"name\": \"<string>\",\n        \"version\": \"<string>\",\n        \"major\": \"<string>\"\n      },\n      \"engine\": {\n        \"name\": \"<string>\",\n        \"version\": \"<string>\"\n      },\n      \"device\": {},\n      \"cpu\": {\n        \"architecture\": \"<string>\"\n      }\n    },\n    \"ip\": \"<string>\",\n    \"permission\": {\n      \"create\": \"<array>\",\n      \"read\": \"<array>\",\n      \"update\": \"<array>\",\n      \"delete\": \"<array>\"\n    },\n    \"MFAInputsBucket\": {},\n    \"sessionID\": \"<string>\",\n    \"authorize\": {\n      \"WdDyzvZI\": {\n        \"protocol\": \"<string>\",\n        \"client\": \"<string>\",\n        \"redirectURI\": \"<string>\",\n        \"webOrigin\": null,\n        \"req\": {\n          \"type\": \"<string>\",\n          \"clientID\": \"<string>\",\n          \"redirectURI\": \"<string>\",\n          \"scope\": \"<array>\",\n          \"state\": \"<string>\"\n        },\n        \"info\": null\n      }\n    }\n  }\n}"
								},
								{
									"name": "Id is not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"session\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/sessions/bucket"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Authorization information is missing or invalid",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"session\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/sessions/bucket"
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unexpected Error",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"session\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/sessions/bucket"
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Get logged in users sessions",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": {
								"scope": "offline_access profile",
								"redirect_uri": "https://localhost:3001/oauth2/token",
								"accessTokenUrl": "https://localhost:3001/oauth2/token",
								"authUrl": "https://localhost:3001/oauth2/authorize",
								"grant_type": "authorization_code"
							}
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": "{{baseUrl}}/sessions"
					},
					"response": [
						{
							"name": "Ok",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": "{{baseUrl}}/sessions"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"_id\": \"<string>\",\n  \"expires\": \"<string>\",\n  \"data\": {\n    \"cookie\": {\n      \"originalMaxAge\": \"<integer>\",\n      \"expires\": \"<string>\",\n      \"secure\": false,\n      \"httpOnly\": true,\n      \"domain\": null,\n      \"path\": \"/\",\n      \"sameSite\": null\n    },\n    \"phonenumber\": \"<string>\",\n    \"user\": {\n      \"authentication\": {\n        \"issuer\": \"<array>\"\n      },\n      \"_id\": \"<string>\",\n      \"email\": \"<string>\",\n      \"__v\": 0,\n      \"accessId\": \"<array>\",\n      \"active\": true,\n      \"createdAt\": \"<string>\",\n      \"emailVerified\": true,\n      \"mfaMethods\": [\n        {\n          \"name\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"mfaSteps\": 0,\n      \"phoneVerified\": false,\n      \"updatedAt\": \"<string>\",\n      \"username\": \"<string>\",\n      \"firstname\": \"<string>\",\n      \"lastname\": \"<string>\",\n      \"phonenumber\": \"<string>\"\n    },\n    \"useragent\": {\n      \"ua\": \"<string>\",\n      \"browser\": {\n        \"name\": \"<string>\",\n        \"version\": \"<string>\",\n        \"major\": \"<string>\"\n      },\n      \"engine\": {\n        \"name\": \"<string>\",\n        \"version\": \"<string>\"\n      },\n      \"device\": {},\n      \"cpu\": {\n        \"architecture\": \"<string>\"\n      }\n    },\n    \"ip\": \"<string>\",\n    \"permission\": {\n      \"create\": \"<array>\",\n      \"read\": \"<array>\",\n      \"update\": \"<array>\",\n      \"delete\": \"<array>\"\n    },\n    \"MFAInputsBucket\": {},\n    \"sessionID\": \"<string>\",\n    \"email\": \"<string>\",\n    \"passport\": {\n      \"user\": {\n        \"authentication\": {\n          \"issuer\": \"<array>\"\n        }\n      },\n      \"_id\": \"<string>\",\n      \"email\": \"<string>\",\n      \"__v\": \"<number>\",\n      \"accessId\": \"<array>\",\n      \"active\": true,\n      \"createdAt\": \"<string>\",\n      \"emailVerified\": true,\n      \"mfaMethods\": [\n        {\n          \"name\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"mfaSteps\": \"<number>\",\n      \"phoneVerified\": false,\n      \"updatedAt\": \"<string>\",\n      \"username\": \"<string>\",\n      \"firstname\": \"<string>\",\n      \"lastname\": \"<string>\",\n      \"phonenumber\": \"<string>\"\n    }\n  }\n}"
						},
						{
							"name": "Authorization information is missing or invalid",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": "{{baseUrl}}/sessions"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unexpected Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": "{{baseUrl}}/sessions"
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": {
			"client_authentication": "header",
			"authRequestParams": [
				{
					"key": "nonce",
					"value": "1",
					"enabled": true,
					"send_as": "request_url"
				}
			],
			"tokenRequestParams": [
				{
					"key": "nonce",
					"value": "1",
					"enabled": false,
					"send_as": "request_body"
				}
			],
			"accessTokenUrl": "{{baseUrl}}/oauth2/token",
			"authUrl": "{{baseUrl}}/oauth2/authorize",
			"grant_type": "authorization_code_with_pkce",
			"clientSecret": "c3adf229cc14b4de3ac140e05d34e17cda234a458d8dfd7bf8a6892e46c3ff81063c25e6d9eca8dc7d19ef8a592b5aab33451e9e6842e6f29175494c13059b70",
			"clientId": "000000000000000000000000",
			"tokenName": "Tokens",
			"scope": "profile openid email",
			"addTokenTo": "header"
		}
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://localhost:3001"
		}
	]
}